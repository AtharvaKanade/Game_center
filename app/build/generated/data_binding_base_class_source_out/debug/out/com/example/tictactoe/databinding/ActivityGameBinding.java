// Generated by view binder compiler. Do not edit!
package com.example.tictactoe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tictactoe.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGameBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton backToMenuButton;

  @NonNull
  public final LinearLayout buttonLayout;

  @NonNull
  public final TextView currentPlayerText;

  @NonNull
  public final GridLayout gameBoard;

  @NonNull
  public final TextView gameStatusText;

  @NonNull
  public final MaterialButton newGameButton;

  private ActivityGameBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton backToMenuButton, @NonNull LinearLayout buttonLayout,
      @NonNull TextView currentPlayerText, @NonNull GridLayout gameBoard,
      @NonNull TextView gameStatusText, @NonNull MaterialButton newGameButton) {
    this.rootView = rootView;
    this.backToMenuButton = backToMenuButton;
    this.buttonLayout = buttonLayout;
    this.currentPlayerText = currentPlayerText;
    this.gameBoard = gameBoard;
    this.gameStatusText = gameStatusText;
    this.newGameButton = newGameButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_game, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backToMenuButton;
      MaterialButton backToMenuButton = ViewBindings.findChildViewById(rootView, id);
      if (backToMenuButton == null) {
        break missingId;
      }

      id = R.id.buttonLayout;
      LinearLayout buttonLayout = ViewBindings.findChildViewById(rootView, id);
      if (buttonLayout == null) {
        break missingId;
      }

      id = R.id.currentPlayerText;
      TextView currentPlayerText = ViewBindings.findChildViewById(rootView, id);
      if (currentPlayerText == null) {
        break missingId;
      }

      id = R.id.gameBoard;
      GridLayout gameBoard = ViewBindings.findChildViewById(rootView, id);
      if (gameBoard == null) {
        break missingId;
      }

      id = R.id.gameStatusText;
      TextView gameStatusText = ViewBindings.findChildViewById(rootView, id);
      if (gameStatusText == null) {
        break missingId;
      }

      id = R.id.newGameButton;
      MaterialButton newGameButton = ViewBindings.findChildViewById(rootView, id);
      if (newGameButton == null) {
        break missingId;
      }

      return new ActivityGameBinding((ConstraintLayout) rootView, backToMenuButton, buttonLayout,
          currentPlayerText, gameBoard, gameStatusText, newGameButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
