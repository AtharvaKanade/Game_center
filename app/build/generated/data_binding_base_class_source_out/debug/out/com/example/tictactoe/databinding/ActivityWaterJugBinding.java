// Generated by view binder compiler. Do not edit!
package com.example.tictactoe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tictactoe.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWaterJugBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton backToHomeButton;

  @NonNull
  public final MaterialButton emptyJugAButton;

  @NonNull
  public final MaterialButton emptyJugBButton;

  @NonNull
  public final MaterialButton fillJugAButton;

  @NonNull
  public final MaterialButton fillJugBButton;

  @NonNull
  public final TextView jugACapacity;

  @NonNull
  public final MaterialCardView jugACard;

  @NonNull
  public final TextView jugACurrent;

  @NonNull
  public final View jugAWater;

  @NonNull
  public final TextView jugBCapacity;

  @NonNull
  public final MaterialCardView jugBCard;

  @NonNull
  public final TextView jugBCurrent;

  @NonNull
  public final View jugBWater;

  @NonNull
  public final TextView movesText;

  @NonNull
  public final MaterialButton newPuzzleButton;

  @NonNull
  public final MaterialButton pourAtoBButton;

  @NonNull
  public final MaterialButton pourBtoAButton;

  @NonNull
  public final TextView targetText;

  @NonNull
  public final TextView titleText;

  private ActivityWaterJugBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton backToHomeButton, @NonNull MaterialButton emptyJugAButton,
      @NonNull MaterialButton emptyJugBButton, @NonNull MaterialButton fillJugAButton,
      @NonNull MaterialButton fillJugBButton, @NonNull TextView jugACapacity,
      @NonNull MaterialCardView jugACard, @NonNull TextView jugACurrent, @NonNull View jugAWater,
      @NonNull TextView jugBCapacity, @NonNull MaterialCardView jugBCard,
      @NonNull TextView jugBCurrent, @NonNull View jugBWater, @NonNull TextView movesText,
      @NonNull MaterialButton newPuzzleButton, @NonNull MaterialButton pourAtoBButton,
      @NonNull MaterialButton pourBtoAButton, @NonNull TextView targetText,
      @NonNull TextView titleText) {
    this.rootView = rootView;
    this.backToHomeButton = backToHomeButton;
    this.emptyJugAButton = emptyJugAButton;
    this.emptyJugBButton = emptyJugBButton;
    this.fillJugAButton = fillJugAButton;
    this.fillJugBButton = fillJugBButton;
    this.jugACapacity = jugACapacity;
    this.jugACard = jugACard;
    this.jugACurrent = jugACurrent;
    this.jugAWater = jugAWater;
    this.jugBCapacity = jugBCapacity;
    this.jugBCard = jugBCard;
    this.jugBCurrent = jugBCurrent;
    this.jugBWater = jugBWater;
    this.movesText = movesText;
    this.newPuzzleButton = newPuzzleButton;
    this.pourAtoBButton = pourAtoBButton;
    this.pourBtoAButton = pourBtoAButton;
    this.targetText = targetText;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWaterJugBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWaterJugBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_water_jug, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWaterJugBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backToHomeButton;
      MaterialButton backToHomeButton = ViewBindings.findChildViewById(rootView, id);
      if (backToHomeButton == null) {
        break missingId;
      }

      id = R.id.emptyJugAButton;
      MaterialButton emptyJugAButton = ViewBindings.findChildViewById(rootView, id);
      if (emptyJugAButton == null) {
        break missingId;
      }

      id = R.id.emptyJugBButton;
      MaterialButton emptyJugBButton = ViewBindings.findChildViewById(rootView, id);
      if (emptyJugBButton == null) {
        break missingId;
      }

      id = R.id.fillJugAButton;
      MaterialButton fillJugAButton = ViewBindings.findChildViewById(rootView, id);
      if (fillJugAButton == null) {
        break missingId;
      }

      id = R.id.fillJugBButton;
      MaterialButton fillJugBButton = ViewBindings.findChildViewById(rootView, id);
      if (fillJugBButton == null) {
        break missingId;
      }

      id = R.id.jugACapacity;
      TextView jugACapacity = ViewBindings.findChildViewById(rootView, id);
      if (jugACapacity == null) {
        break missingId;
      }

      id = R.id.jugACard;
      MaterialCardView jugACard = ViewBindings.findChildViewById(rootView, id);
      if (jugACard == null) {
        break missingId;
      }

      id = R.id.jugACurrent;
      TextView jugACurrent = ViewBindings.findChildViewById(rootView, id);
      if (jugACurrent == null) {
        break missingId;
      }

      id = R.id.jugAWater;
      View jugAWater = ViewBindings.findChildViewById(rootView, id);
      if (jugAWater == null) {
        break missingId;
      }

      id = R.id.jugBCapacity;
      TextView jugBCapacity = ViewBindings.findChildViewById(rootView, id);
      if (jugBCapacity == null) {
        break missingId;
      }

      id = R.id.jugBCard;
      MaterialCardView jugBCard = ViewBindings.findChildViewById(rootView, id);
      if (jugBCard == null) {
        break missingId;
      }

      id = R.id.jugBCurrent;
      TextView jugBCurrent = ViewBindings.findChildViewById(rootView, id);
      if (jugBCurrent == null) {
        break missingId;
      }

      id = R.id.jugBWater;
      View jugBWater = ViewBindings.findChildViewById(rootView, id);
      if (jugBWater == null) {
        break missingId;
      }

      id = R.id.movesText;
      TextView movesText = ViewBindings.findChildViewById(rootView, id);
      if (movesText == null) {
        break missingId;
      }

      id = R.id.newPuzzleButton;
      MaterialButton newPuzzleButton = ViewBindings.findChildViewById(rootView, id);
      if (newPuzzleButton == null) {
        break missingId;
      }

      id = R.id.pourAtoBButton;
      MaterialButton pourAtoBButton = ViewBindings.findChildViewById(rootView, id);
      if (pourAtoBButton == null) {
        break missingId;
      }

      id = R.id.pourBtoAButton;
      MaterialButton pourBtoAButton = ViewBindings.findChildViewById(rootView, id);
      if (pourBtoAButton == null) {
        break missingId;
      }

      id = R.id.targetText;
      TextView targetText = ViewBindings.findChildViewById(rootView, id);
      if (targetText == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new ActivityWaterJugBinding((ConstraintLayout) rootView, backToHomeButton,
          emptyJugAButton, emptyJugBButton, fillJugAButton, fillJugBButton, jugACapacity, jugACard,
          jugACurrent, jugAWater, jugBCapacity, jugBCard, jugBCurrent, jugBWater, movesText,
          newPuzzleButton, pourAtoBButton, pourBtoAButton, targetText, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
